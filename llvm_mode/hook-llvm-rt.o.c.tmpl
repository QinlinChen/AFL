/* Generated by genhook.py */
#define _POSIX_C_SOURCE 200809L
#define _XOPEN_SOURCE 700

#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <grp.h>
#include <pwd.h>
#include <dirent.h>
#include <sys/mman.h>

#include "../config.h"
#include "snap2exe/checkpoint.h"


extern void __afl_manual_init(void);

#define AFL_INIT() do { \
    static volatile char *_A __attribute__((used)); \
    _A = (char*) DEFER_SIG; \
    __afl_manual_init(); \
  } while (0)


int __hook_open(const char * pathname, int flags, ...)
{
  if (s2e_checkpoint(1, S2E_DEFAULT_SAVE_DIR, S2E_SCHED_PROB))
    AFL_INIT();

  mode_t mode = 0;
  if (flags & O_CREAT) {
    va_list ap;
    va_start(ap, flags);
    mode = va_arg(ap, mode_t);
    va_end(ap);
  }

  return open(pathname, flags, mode);
}

int __hook_openat(int dirfd, const char * pathname, int flags, ...)
{
  if (s2e_checkpoint(1, S2E_DEFAULT_SAVE_DIR, S2E_SCHED_PROB))
    AFL_INIT();

  mode_t mode = 0;
  if (flags & O_CREAT) {
    va_list ap;
    va_start(ap, flags);
    mode = va_arg(ap, mode_t);
    va_end(ap);
  }

  return openat(dirfd, pathname, flags, mode);
}

{% for func_info in func_infos %}
{{ func_info.ret_type }} __hook_{{ func_info.name }}({{ func_info.params_str() }})
{
  if (s2e_checkpoint(1, S2E_DEFAULT_SAVE_DIR, S2E_SCHED_PROB))
    AFL_INIT();

  return {{ func_info.name }}({{ func_info.args_str() }});
}
{% endfor %}